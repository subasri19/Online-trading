
package forex;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Subasri
 */
public class ItemsInCart extends javax.swing.JFrame {

    /**
     * Creates new form ItemsInCart to view the items added to cart
     */
    public ItemsInCart() {
        initComponents();
    }

    public String uname;
    ResultSet RS;
    ItemsInCart(String UName) {
       initComponents();
       this.uname = UName;
       display();
       try{
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "select * from itemsInCart where uname='"+uname+"';";
            RS = stmt.executeQuery(query);
      }
       catch(Exception e){
           JOptionPane.showMessageDialog(this,e.getMessage());
       }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ltitle = new javax.swing.JLabel();
        litemcategory = new javax.swing.JLabel();
        litemCost = new javax.swing.JLabel();
        litemName = new javax.swing.JLabel();
        litemDesc = new javax.swing.JLabel();
        itemCategory = new javax.swing.JTextField();
        itemCost = new javax.swing.JTextField();
        itemName = new javax.swing.JTextField();
        itemDesc = new javax.swing.JScrollPane();
        aitemDesc = new javax.swing.JTextArea();
        previousRecord = new javax.swing.JButton();
        deleteItem = new javax.swing.JButton();
        proceed = new javax.swing.JButton();
        goBack = new javax.swing.JButton();
        nextRecord = new javax.swing.JButton();
        viewAcc = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1120, 1120));
        getContentPane().setLayout(null);

        ltitle.setFont(new java.awt.Font("Comic Sans MS", 2, 36)); // NOI18N
        ltitle.setText("YOUR CART");
        getContentPane().add(ltitle);
        ltitle.setBounds(440, 47, 208, 51);

        litemcategory.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        litemcategory.setText("Category");
        getContentPane().add(litemcategory);
        litemcategory.setBounds(149, 384, 101, 34);

        litemCost.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        litemCost.setText("Cost");
        getContentPane().add(litemCost);
        litemCost.setBounds(149, 464, 50, 34);

        litemName.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        litemName.setText("Item name");
        getContentPane().add(litemName);
        litemName.setBounds(149, 160, 120, 34);

        litemDesc.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        litemDesc.setText("Item description");
        getContentPane().add(litemDesc);
        litemDesc.setBounds(149, 258, 190, 34);

        itemCategory.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        getContentPane().add(itemCategory);
        itemCategory.setBounds(441, 378, 289, 46);

        itemCost.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        itemCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCostActionPerformed(evt);
            }
        });
        getContentPane().add(itemCost);
        itemCost.setBounds(441, 452, 289, 46);

        itemName.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameActionPerformed(evt);
            }
        });
        getContentPane().add(itemName);
        itemName.setBounds(441, 168, 289, 46);

        aitemDesc.setColumns(20);
        aitemDesc.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        aitemDesc.setRows(5);
        itemDesc.setViewportView(aitemDesc);

        getContentPane().add(itemDesc);
        itemDesc.setBounds(441, 243, 461, 117);

        previousRecord.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        previousRecord.setText("MOVE TO PREVIOUS RECORD");
        previousRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousRecordActionPerformed(evt);
            }
        });
        getContentPane().add(previousRecord);
        previousRecord.setBounds(547, 542, 391, 43);

        deleteItem.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        deleteItem.setText("DELETE ITEM FROM CART");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });
        getContentPane().add(deleteItem);
        deleteItem.setBounds(300, 600, 355, 43);

        proceed.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        proceed.setText("PROCEED TO PAYMENT");
        proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedActionPerformed(evt);
            }
        });
        getContentPane().add(proceed);
        proceed.setBounds(300, 660, 355, 43);

        goBack.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        goBack.setText("GO BACK");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });
        getContentPane().add(goBack);
        goBack.setBounds(80, 660, 141, 43);

        nextRecord.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        nextRecord.setText("MOVE TO NEXT RECORD");
        nextRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRecordActionPerformed(evt);
            }
        });
        getContentPane().add(nextRecord);
        nextRecord.setBounds(184, 542, 335, 43);

        viewAcc.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        viewAcc.setText("VIEW ACCOUNT");
        viewAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccActionPerformed(evt);
            }
        });
        getContentPane().add(viewAcc);
        viewAcc.setBounds(720, 650, 240, 50);

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1150, 1150);

        pack();
    }// </editor-fold>//GEN-END:initComponents

 public void display(){
        try{
            ResultSet rs;
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "select * from itemsInCart where uname='"+uname+"';";
            rs = stmt.executeQuery(query);
            
            if(rs.first()){
                rs.first();
                itemName.setText(rs.getString("name"));
                aitemDesc.setText(rs.getString("descr"));
                itemCategory.setText(rs.getString("category"));
                itemCost.setText(rs.getString("cost"));
            } else {
                JOptionPane.showMessageDialog(null,"Your cart is empty. Please add items to the cart to view them here");
            }         
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  
    }

    private void itemCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCostActionPerformed

    private void proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedActionPerformed
        int amt = 0;
        try{
            ResultSet rs;
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "select cost from itemsInCart where uname='"+uname+"';";
            rs = stmt.executeQuery(query);
            while(rs.next()){ 
                int cost = Integer.parseInt(rs.getString("cost"));
                amt = amt+cost;
                rs.next();
                if(rs.isLast()){
                    amt = amt + Integer.parseInt(rs.getString("cost"));
                }
                    //amt = amt + Integer.parseInt(rs.getString("cost"));
            }
            //rs.isLast();
            //amt = amt + Integer.parseInt(rs.getString("cost"));
            
            this.setVisible(false);
            new Payment(uname,amt).setVisible(true);
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_proceedActionPerformed

    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        this.setVisible(false);
        new BItemDisplayPage(uname).setVisible(true);
    }//GEN-LAST:event_goBackActionPerformed

    private void nextRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextRecordActionPerformed
        try{  
           if(!RS.isLast()){
                RS.next();
                itemName.setText(RS.getString("name"));
                aitemDesc.setText(RS.getString("descr"));
                itemCategory.setText(RS.getString("category"));
                itemCost.setText(RS.getString("cost"));     
            } 
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  

    }//GEN-LAST:event_nextRecordActionPerformed

    private void previousRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousRecordActionPerformed
         try{
            if(!RS.isFirst()){
                RS.previous();
                itemName.setText(RS.getString("name"));
                aitemDesc.setText(RS.getString("descr"));
                itemCategory.setText(RS.getString("category"));
                itemCost.setText(RS.getString("cost"));
            }      
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  
    }//GEN-LAST:event_previousRecordActionPerformed

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemActionPerformed
        try{
            ResultSet rs;
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "delete from itemsInCart where uname = '" +uname+"' and name = '" +itemName.getText()+"';";
            stmt.executeUpdate(query);
       }
       catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
       JOptionPane.showMessageDialog(null, "Item deleted from your cart");
    }//GEN-LAST:event_deleteItemActionPerformed

    private void itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameActionPerformed

    private void viewAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccActionPerformed
        this.setVisible(false);
        new ViewAccount(uname).setVisible(true);
    }//GEN-LAST:event_viewAccActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemsInCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemsInCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemsInCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemsInCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemsInCart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea aitemDesc;
    private javax.swing.JButton deleteItem;
    private javax.swing.JButton goBack;
    private javax.swing.JTextField itemCategory;
    private javax.swing.JTextField itemCost;
    private javax.swing.JScrollPane itemDesc;
    private javax.swing.JTextField itemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel litemCost;
    private javax.swing.JLabel litemDesc;
    private javax.swing.JLabel litemName;
    private javax.swing.JLabel litemcategory;
    private javax.swing.JLabel ltitle;
    private javax.swing.JButton nextRecord;
    private javax.swing.JButton previousRecord;
    private javax.swing.JButton proceed;
    private javax.swing.JButton viewAcc;
    // End of variables declaration//GEN-END:variables
}
