package forex;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Subasri
 */
public class BItemDisplayPage extends javax.swing.JFrame {

    /**
     * Creates new form BItemDisplayPage for displaying the items for sale to the buyers
     */
    public BItemDisplayPage() {
        initComponents();
    }
    
    public String uname;
    ResultSet RS;
    BItemDisplayPage(String UName) {
        this.uname = UName;
        initComponents();
        display();
        TitemName.setEditable(false);
        Tdesc.setEditable(false);
        TitemCost.setEditable(false);
        Tcategory.setEditable(false);
        try{
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "select * from itemDetails;";
            RS = stmt.executeQuery(query);
             }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addToCart = new javax.swing.JButton();
        category = new javax.swing.JLabel();
        itemName = new javax.swing.JLabel();
        itemDesc = new javax.swing.JLabel();
        cost = new javax.swing.JLabel();
        Tcategory = new javax.swing.JTextField();
        TitemName = new javax.swing.JTextField();
        TitemDesc = new javax.swing.JScrollPane();
        Tdesc = new javax.swing.JTextArea();
        TitemCost = new javax.swing.JTextField();
        previousRecord = new javax.swing.JButton();
        seeYourCart = new javax.swing.JButton();
        viewAcc = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        nextRecord = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1120, 1120));
        getContentPane().setLayout(null);

        addToCart.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        addToCart.setText("ADD TO CART");
        addToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartActionPerformed(evt);
            }
        });
        getContentPane().add(addToCart);
        addToCart.setBounds(465, 639, 233, 43);

        category.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        category.setText("Category");
        getContentPane().add(category);
        category.setBounds(177, 190, 196, 36);

        itemName.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        itemName.setText("Item name");
        getContentPane().add(itemName);
        itemName.setBounds(177, 258, 196, 43);

        itemDesc.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        itemDesc.setText("Item description");
        getContentPane().add(itemDesc);
        itemDesc.setBounds(177, 344, 196, 42);

        cost.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        cost.setText("Cost");
        getContentPane().add(cost);
        cost.setBounds(177, 490, 196, 35);

        Tcategory.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        getContentPane().add(Tcategory);
        Tcategory.setBounds(472, 182, 237, 44);

        TitemName.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        getContentPane().add(TitemName);
        TitemName.setBounds(472, 258, 237, 43);

        Tdesc.setColumns(20);
        Tdesc.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        Tdesc.setRows(5);
        TitemDesc.setViewportView(Tdesc);

        getContentPane().add(TitemDesc);
        TitemDesc.setBounds(472, 330, 420, 143);

        TitemCost.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        getContentPane().add(TitemCost);
        TitemCost.setBounds(472, 489, 181, 35);

        previousRecord.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        previousRecord.setText("MOVE TO PREVIOUS RECORD ");
        previousRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousRecordActionPerformed(evt);
            }
        });
        getContentPane().add(previousRecord);
        previousRecord.setBounds(579, 576, 401, 43);

        seeYourCart.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        seeYourCart.setText("SEE YOUR CART");
        seeYourCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeYourCartActionPerformed(evt);
            }
        });
        getContentPane().add(seeYourCart);
        seeYourCart.setBounds(147, 698, 231, 43);

        viewAcc.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        viewAcc.setText("VIEW ACCOUNT");
        viewAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAccActionPerformed(evt);
            }
        });
        getContentPane().add(viewAcc);
        viewAcc.setBounds(465, 698, 233, 43);

        logout.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        logout.setText("LOG OUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout);
        logout.setBounds(794, 706, 145, 43);

        title.setFont(new java.awt.Font("Segoe Print", 3, 24)); // NOI18N
        title.setText("ITEMS FOR SALE");
        getContentPane().add(title);
        title.setBounds(380, 10, 255, 59);

        nextRecord.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        nextRecord.setText("MOVE TO NEXT RECORD ");
        nextRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRecordActionPerformed(evt);
            }
        });
        getContentPane().add(nextRecord);
        nextRecord.setBounds(177, 578, 345, 43);

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -2, 1120, 1150);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        this.dispose();
        new Logout().setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void previousRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousRecordActionPerformed
        try{
            if(!RS.isFirst()){
                RS.previous();
                TitemName.setText(RS.getString("name"));
                Tdesc.setText(RS.getString("descr"));
                Tcategory.setText(RS.getString("category"));
                TitemCost.setText(RS.getString("cost"));
            }
            if(RS.isBeforeFirst()){
                JOptionPane.showMessageDialog(this,"You have the first item of the list");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  
    }//GEN-LAST:event_previousRecordActionPerformed

    private void viewAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAccActionPerformed
        this.dispose();
        new ViewAccount(uname).setVisible(true);
    }//GEN-LAST:event_viewAccActionPerformed

    private void seeYourCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeYourCartActionPerformed
        this.dispose();
        new ItemsInCart(uname).setVisible(true);
    }//GEN-LAST:event_seeYourCartActionPerformed

    private void addToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartActionPerformed
        try{
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "insert into itemsInCart values('"+uname+"','"+TitemName.getText()+"','"+Tdesc.getText()+"','"+TitemCost.getText()+"','"+Tcategory.getText()+"');";
            stmt.execute(query);
        }
       catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
       }
       JOptionPane.showMessageDialog(null, "Your item has been successfully added to cart","Confirmation Box",1); 
    }//GEN-LAST:event_addToCartActionPerformed

    private void nextRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextRecordActionPerformed
       
            try{
               if(!RS.isLast()){
                    RS.next();
                    TitemName.setText(RS.getString("name"));
                    Tdesc.setText(RS.getString("descr"));
                    Tcategory.setText(RS.getString("category"));
                    TitemCost.setText(RS.getString("cost"));
               }
               if(RS.isAfterLast())
                   JOptionPane.showMessageDialog(this,"You have reached the end of the list");
            }
            catch(Exception e){
                    JOptionPane.showMessageDialog(this,e.getMessage());
            }    
    }//GEN-LAST:event_nextRecordActionPerformed

    public void display(){
        try{
            ResultSet rs;
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection)
            DriverManager.getConnection("jdbc:mysql://localhost:3306/forex","root", "");
            Statement stmt = (Statement) con.createStatement();
            String query = "select * from itemDetails;";
            rs = stmt.executeQuery(query);
            
            rs.first();
                TitemName.setText(rs.getString("name"));
                Tdesc.setText(rs.getString("descr"));
                Tcategory.setText(rs.getString("category"));
                TitemCost.setText(rs.getString("cost"));
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }  
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BItemDisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BItemDisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BItemDisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BItemDisplayPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BItemDisplayPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Tcategory;
    private javax.swing.JTextArea Tdesc;
    private javax.swing.JTextField TitemCost;
    private javax.swing.JScrollPane TitemDesc;
    private javax.swing.JTextField TitemName;
    private javax.swing.JButton addToCart;
    private javax.swing.JLabel category;
    private javax.swing.JLabel cost;
    private javax.swing.JLabel itemDesc;
    private javax.swing.JLabel itemName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton logout;
    private javax.swing.JButton nextRecord;
    private javax.swing.JButton previousRecord;
    private javax.swing.JButton seeYourCart;
    private javax.swing.JLabel title;
    private javax.swing.JButton viewAcc;
    // End of variables declaration//GEN-END:variables
}
